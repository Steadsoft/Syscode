// any variable declared in the global scope MUST be explicitly declared as static
// if it is not declared as external then it is internal, there is no 'internal' keyword.

dcl global_count bin16 static          // this defaults to internal
dcl global_rate  bin16 static external // this is only legal in the global scope nn inside a proc

// we must not accept a scope inside of a proc/func 
// a scope can only contain procs/funcs, declared data (vars, structs but must be static ext), types

dcl get_date entry (bin32) as (string(64))

// a "package" in PL/I is rather weak, it's not really a proper namespace. 
// dcl utils.set_date (bin64)

// SEE: https://www.ibm.com/docs/en/epfz/6.2.0?topic=organization-packages

dcl goto bin16 aligned(1)

speed = fast

dcl struct if
       struct then
       end
       struct else
          struct struct
          end
       end
end

proc main options(main) // outermost, therefore has external scope, full name: utilities.main

    then = 100 + 75;

    dcl c bin(32) aligned(2 * 23) static internal external
    dcl d bin(32) static aligned(2 * 23) external internal

    dcl structure while
        struct inner1
            field1_1 bin8
            field1_1 bin8
        end
        struct inner2
            field2_1 bin8
            field2_2 bin8
        end
    end

    dcl a bin(10,4) static based (p)

    dcl large(10 + a) ubin(71) init(1234)

    date = get_date(123)

    outer.inner1.dont.age = 9

    do loop
        error_count += 1
    end

    outer.inner1.field1_2 = 1000
    outer(a,b,c).inner1.field1_2 = 1000

    none.missing.rate = 1000

    outer.inner3.field2_1 = 500

    call reset_database(x,y,z)


    return junk.trash(x)

end

goto reboot

